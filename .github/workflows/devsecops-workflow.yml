name: Emplyee Frontend DevOps Workflow

on:
    push:
        branches: [ main ]
    workflow_dispatch: 
jobs:
    sonarcloud:
        name: SonarCloud
        runs-on: ubuntu-latest
        steps:
          - name: Downloading the repository
            uses: actions/checkout@v3

          - name: Use node.js 18.x
            uses: actions/setup-node@v3.7.0
            with:
                node-version: '18'

          - name: SonarCloud Scan
            uses: SonarSource/sonarcloud-github-action@master
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            with:
               args: >
                -Dsonar.organization=nasibahalharbi
                -Dsonar.projectKey=NasibahAlharbi_employeefrontend-fursan-track3
                -Dsonar.sources=.
                -Dsonar.host.url=https://sonarcloud.io
    npm-aduit-scan:
        name: npm aduit scan for vulnerabilities
        runs-on: ubuntu-latest
        steps:
            - name: First 1 Download the source code
              uses: actions/checkout@v3.5.3

            - name: Step 2 Install Nodejs
              uses: actions/setup-node@v3.7.0
              with:
                node-version: '18.16.1'

            - name: Step 3 Install dependencies 
              run: npm install

            - name: Step 4 NPM adusit scan and generate report in JSON Format
              run: npm audit --json > npm-audit-results.json
              continue-on-error: true

            - name: Strp 5 upload NPM audit scan reoprt to github
              uses: actions/upload-artifact@v3
              with:
                name: npm-audit-result
                path: npm-auidt-result.json


    # build-job:
    #     runs-on: ubuntu-latest
    #     steps: 
    #         - name: Build step 1
    #           run: echo "Build step 1"
    #         - name: Build step 2
    #           run: echo "Build step 2"
    # test:
    #     runs-on: ubuntu-latest
    #     needs: build-job
    #     steps: 
    #         - name: Test step 1
    #           run: echo "Test step 1"
    # provision:
    #     runs-on: ubuntu-latest
    #     needs: test
    #     steps:
    #         - name: provision step 1
    #           run: echo "provision step 1"
    # deploy:
    #     runs-on: ubuntu-latest
    #     needs: provision
    #     steps:
    #         - name: depoly step 1
    #           run: echo "depoly step 1"
    #         - name: deploy step 2
    #           run: echo "deploy step 2" 
    # monitor:
    #     runs-on: ubuntu-latest
    #     needs: deploy
    #     steps:
    #         - name: monitor step 1
    #           run: echo "monitor step 1"
        